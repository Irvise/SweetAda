
#
# Renesas Electronic PK-S5D9
#
# Synergy S5D9 120 MHz ARM Cortex-M4 LE
#

# force ZFP
RTS := zfp
PROFILE := zfp
USE_LIBADA := N

CPU       := ARM
CPU_MODEL := CORTEXM4

GCC_SWITCHES_PLATFORM     := -mcpu=cortex-m4
STARTUP_OBJECTS           := startup.S llkernel.S
LD_SWITCHES_PLATFORM      :=
OBJDUMP_SWITCHES_PLATFORM :=
POSTBUILD_ROMFILE         := Y
OBJCOPY_SWITCHES_PLATFORM := -O binary --gap-fill=0x00

USE_APPLICATION := test-PK-S5D9

OPENOCD_PREFIX := /opt/OpenOCD
#OPENOCD_PREFIX := C:\Program Files\OpenOCD-20230202-0.12.0

# Python front-end
SESSION_START_COMMAND := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -server -w                                                 \
                           -p "$(OPENOCD_PREFIX)"                                     \
                           -c "$(SWEETADA_PATH)"/$(PLATFORM_DIRECTORY)/openocd.cfg

SESSION_END_COMMAND   := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -shutdown

RUN_COMMAND           := "$(PYTHON)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.py \
                           -f "$(SWEETADA_PATH)"/$(KERNEL_OUTFILE)                    \
                           -e $(ELFTOOL) -s _start -thumb -command "reset halt"

# Tcl front-end
#SESSION_START_COMMAND := "$(TCLSH)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.tcl \
#                           -server -w                                                 \
#                           -p "$(OPENOCD_PREFIX)"                                     \
#                           -c "$(SWEETADA_PATH)"/$(PLATFORM_DIRECTORY)/openocd.cfg
#SESSION_END_COMMAND   := "$(TCLSH)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.tcl \
#                           -shutdown
#RUN_COMMAND           := "$(TCLSH)" "$(SWEETADA_PATH)"/$(SHARE_DIRECTORY)/openocd.tcl \
#                           -f "$(SWEETADA_PATH)"/$(KERNEL_OUTFILE)                    \
#                           -e $(ELFTOOL) -s _start -thumb -command "reset halt"

# debug session in cmd.exe shell
#DEBUG_COMMAND          := $(RUN_COMMAND) -debug &&                          \
#                          %GDB%                                             \
#                                -ex "target extended-remote localhost:3333" \
#                                -ex "set language asm"                      \
#                                -ex "set $$pc=_start"                       \
#                                $(KERNEL_OUTFILE)

# debug session in *sh shell
DEBUG_COMMAND          := $(RUN_COMMAND) -debug &&                          \
                          $$GDB                                             \
                                -ex "target extended-remote localhost:3333" \
                                -ex "set language asm"                      \
                                -ex "set \$$pc=_start"                      \
                                $(KERNEL_OUTFILE)

