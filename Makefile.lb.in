
#
# Library sub-Makefile
#
# Copyright (C) 2020-2023 Gabriele Galeotti
#
# This work is licensed under the terms of the MIT License.
# Please consult the LICENSE.txt file located in the top-level directory.
#

#
# Environment variables:
# KERNEL_PARENT_PATH
# TOUCH
# BUILD_MODE
# LIBRARY_DIRECTORY
# OBJECT_DIRECTORY
# LIBRARY_NAME
# OBJECTS
# INCLUDES
# AR
# RANLIB
# CC
# GNATMAKE
# GCC_WRAPPER_TIMESTAMP_FILENAME
# GNAT_WRAPPER_TIMESTAMP_FILENAME
#

# avoid generation of unuseful timestamps
export GCC_WRAPPER_TIMESTAMP_FILENAME :=
export GNAT_WRAPPER_TIMESTAMP_FILENAME :=

ifeq ($(BUILD_MODE),MAKEFILE)

#
# MAKEFILE
#

INCLUDES := $(foreach d,$(INCLUDE_DIRECTORIES),-I$(KERNEL_PARENT_PATH)/$(d))

ifeq ($(LIBRARY_NAME),platform)
GCC_SWITCHES_LIBRARY := $(GCC_SWITCHES_STARTUP)
else
GCC_SWITCHES_LIBRARY :=
endif

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/lib$(LIBRARY_NAME).a : $(OBJECTS)
	$(call brief-command, \
        $(AR) cr $@ $(OBJECTS) \
        ,[AR],$(notdir $@))
	$(call brief-command, \
        $(RANLIB) $@ \
        ,[RANLIB],$(notdir $@))

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/%.o : %.adb
	$(call brief-command, \
        $(GNATMAKE)                                              \
                    -gnatec=$(GNATADC_FILENAME)                  \
                    -D $(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY) \
                    $(GCC_SWITCHES_LIBRARY)                      \
                    -c $(INCLUDES) $<                            \
        ,[GNATMAKE],$<)

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/%.o : %.ads
	$(call brief-command, \
        $(GNATMAKE)                                              \
                    -gnatec=$(GNATADC_FILENAME)                  \
                    -D $(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY) \
                    $(GCC_SWITCHES_LIBRARY)                      \
                    -c $(INCLUDES) $<                            \
        ,[GNATMAKE],$<)

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/%.o : %.S
	$(call brief-command, \
        $(CC)                         \
              -o $@                   \
              $(GCC_SWITCHES_LIBRARY) \
              -c $(INCLUDES) $<       \
        ,[CC/AS],$<)

else ifeq ($(BUILD_MODE),GPR)

ifeq ($(OBJECTS),)

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/lib$(LIBRARY_NAME).a :
	$(call brief-command, \
        $(TOUCH) $@ \
        ,[AR-NULL],$(notdir $@))

else

#
# GPRbuild
#

# shorthand
LIB_LIBRARY := $(KERNEL_PARENT_PATH)/$(LIBRARY_DIRECTORY)/lib$(LIBRARY_NAME).a

GPR_INCLUDES := $(foreach d,$(INCLUDE_DIRECTORIES),$(KERNEL_PARENT_PATH)/$(d))
export GPR_INCLUDES

.PHONY : FORCE
FORCE :

$(LIB_LIBRARY) : FORCE
	$(call brief-command, \
        $(GPRBUILD)                           \
                    -aP $(KERNEL_PARENT_PATH) \
                    -P $(LIBRARY_NAME).gpr    \
        ,[GPRBUILD-L],$(LIBRARY_NAME).gpr)

$(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/lib$(LIBRARY_NAME).a : $(LIB_LIBRARY)
ifeq ($(OSTYPE),cmd)
	$(call brief-command, \
        $(CP) $(LIB_LIBRARY) $(KERNEL_PARENT_PATH)\$(OBJECT_DIRECTORY)\ \
        ,[COPYOBJLIB],$(notdir $@))
else
	$(call brief-command, \
        $(CP) $(LIB_LIBRARY) $(KERNEL_PARENT_PATH)/$(OBJECT_DIRECTORY)/ \
        ,[COPYOBJLIB],$(notdir $@))
endif

endif

endif

