
#
# Library sub-Makefile
#
# Copyright (C) 2020-2023 Gabriele Galeotti
#
# This work is licensed under the terms of the MIT License.
# Please consult the LICENSE.txt file located in the top-level directory.
#

#
# Environment variables:
# OSTYPE
# ECHO
# SED
# TOUCH
# UPDATETM
# BUILD_MODE
# KERNEL_PARENT_PATH
# LIBRARY_DIRECTORY
# OBJECT_DIRECTORY
# LIBRARY_NAME
# OBJECTS
# INCLUDES
# AR
# RANLIB
# CC
# GNATMAKE
# GNATMAKE_DEPEND
# GCC_WRAPPER_TIMESTAMP_FILENAME
# GNAT_WRAPPER_TIMESTAMP_FILENAME
#

#
# create-empty
#
# Usage:
# $(call create-empty,filename)
#
ifeq ($(OSTYPE),cmd)
create-empty = $(TOUCH) $1
else
create-empty = $(TOUCH) $1
endif

#
# update-timestamp
#
# Usage:
# $(call update-timestamp,filename)
#
ifeq ($(OSTYPE),cmd)
update-timestamp = $(UPDATETM) $1
else
update-timestamp = $(TOUCH) $1
endif

# avoid generation of unuseful timestamps
export GCC_WRAPPER_TIMESTAMP_FILENAME :=
export GNAT_WRAPPER_TIMESTAMP_FILENAME :=

ifeq ($(BUILD_MODE),MAKEFILE)

#
# MAKEFILE
#

INCLUDES := $(foreach d,$(INCLUDE_DIRECTORIES),-I$(KERNEL_PARENT_PATH)/$(d))
VPATH    := $(foreach d,$(INCLUDE_DIRECTORIES),$(KERNEL_PARENT_PATH)/$(d))

ifeq ($(LIBRARY_NAME),platform)
GCC_SWITCHES_LIBRARY := $(GCC_SWITCHES_STARTUP)
else
GCC_SWITCHES_LIBRARY :=
endif

$(OBJ_DIRECTORY)/lib$(LIBRARY_NAME).a : $(OBJECTS)
	$(call brief-command,\
        $(AR) cr $@ $(OBJECTS) \
        ,[AR],$(notdir $@))
	$(call brief-command,\
        $(RANLIB) $@ \
        ,[RANLIB],$(notdir $@))

ifeq ($(OSTYPE),cmd)
%.o : %.adb %.ads
$(OBJ_DIRECTORY)/%.o : %.adb %.ads $(DEP_DIRECTORY)/%.d
else
%.o : %.ad[bs]
$(OBJ_DIRECTORY)/%.o : %.ad[bs] $(DEP_DIRECTORY)/%.d
endif
	$(call brief-command,\
        $(GNATMAKE)                             \
                    -gnatec=$(GNATADC_FILENAME) \
                    -D $(OBJ_DIRECTORY)         \
                    $(GCC_SWITCHES_LIBRARY)     \
                    -c $(INCLUDES) $<           \
        ,[GNATMAKE],$<)
	$(call brief-command,\
        $(GNATMAKE_DEPEND)                             \
                           -M                          \
                           -gnatec=$(GNATADC_FILENAME) \
                           -D $(OBJ_DIRECTORY)         \
                           $(GCC_SWITCHES_LIBRARY)     \
                           -c $(INCLUDES) $<           \
                           > $(DEP_DIRECTORY)/$*.td    \
        ,[GNATMAKE-D],$*.d)
ifeq ($(OSTYPE),cmd)
	@$(MV) $(DEP_DIRECTORY)\$*.td $(DEP_DIRECTORY)\$*.d
	@$(SED) -i -e "s|^\(.* : .*\)$$|$(OBJ_DIRECTORY)/\1|" $(DEP_DIRECTORY_CMD)\$*.d
	@$(call update-timestamp,$(DEP_DIRECTORY_CMD)\$*.ali)
	@$(call update-timestamp,$(OBJ_DIRECTORY_CMD)\$*.o)
else
	@$(MV) $(DEP_DIRECTORY)/$*.td $(DEP_DIRECTORY)/$*.d
	@$(SED) -i -e "s|^\(.* : .*\)\$$|$(OBJ_DIRECTORY)/\1|" $(DEP_DIRECTORY)/$*.d
	@$(call update-timestamp,$(DEP_DIRECTORY)/$*.ali)
	@$(call update-timestamp,$(OBJ_DIRECTORY)/$*.o)
endif

%.o : %.S
$(OBJ_DIRECTORY)/%.o : %.S $(DEP_DIRECTORY)/%.d
	$(call brief-command,\
        $(CC)                            \
              -o $@                      \
              -MT $@ -MMD -MP            \
              -MF $(DEP_DIRECTORY)/$*.td \
              $(GCC_SWITCHES_LIBRARY)    \
              -c $(INCLUDES) $<          \
        ,[CC/AS],$<)
ifeq ($(OSTYPE),cmd)
	@$(MV) $(DEP_DIRECTORY)\$*.td $(DEP_DIRECTORY)\$*.d
	@$(call update-timestamp,$(OBJ_DIRECTORY_CMD)\$*.o)
else
	@$(MV) $(DEP_DIRECTORY)/$*.td $(DEP_DIRECTORY)/$*.d
	@$(call update-timestamp,$(OBJ_DIRECTORY)/$*.o)
endif

DEP_FILES := $(OBJECTS:%.o=%.d)

$(DEP_FILES) :

include $(wildcard $(DEP_FILES))

else ifeq ($(BUILD_MODE),GPR)

ifeq ($(OBJECTS),)

#
# GPRbuild (no object files)
#

$(OBJ_DIRECTORY)/lib$(LIBRARY_NAME).a :
ifeq ($(OSTYPE),cmd)
	$(call brief-command,\
        $(call create-empty,$(OBJ_DIRECTORY_CMD)\lib$(LIBRARY_NAME).a) \
        ,[AR-NULL],$(notdir $@))
else
	$(call brief-command,\
        $(call create-empty,$@) \
        ,[AR-NULL],$(notdir $@))
endif

else

#
# GPRbuild
#

export GPR_INCLUDES := $(foreach d,$(INCLUDE_DIRECTORIES),$(KERNEL_PARENT_PATH)/$(d))

.PHONY : FORCE
FORCE :

$(LIB_DIRECTORY)/lib$(LIBRARY_NAME).a : FORCE
	$(call brief-command,\
        $(GPRBUILD)                           \
                    -aP $(KERNEL_PARENT_PATH) \
                    -P $(LIBRARY_NAME).gpr    \
        ,[GPRBUILD-L],$(LIBRARY_NAME).gpr)

$(OBJ_DIRECTORY)/lib$(LIBRARY_NAME).a : $(LIB_DIRECTORY)/lib$(LIBRARY_NAME).a
ifeq ($(OSTYPE),cmd)
	$(call brief-command,\
        $(CP) $(LIB_DIRECTORY)\lib$(LIBRARY_NAME).a $(OBJ_DIRECTORY)\ \
        ,[COPYOBJLIB],$(notdir $@))
else
	$(call brief-command,\
        $(CP) $(LIB_DIRECTORY)/lib$(LIBRARY_NAME).a $(OBJ_DIRECTORY)/ \
        ,[COPYOBJLIB],$(notdir $@))
endif

endif

endif

